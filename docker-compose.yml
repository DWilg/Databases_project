version: "3.3"

services:
  db:
    image: mysql:latest

    container_name: my_database

    env_file:
      - .env

    volumes:
      - db_data:/var/lib/mysql

    networks:
      - app_network

    ports:
      - "3306:3306"

    restart: unless-stopped

    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]

      interval: 30s

      timeout: 10s

      retries: 5

  redis:
    image: redis/redis-stack-server:latest
    container_name: my_redis
    environment:
      - REDIS_PASSWORD=example_redis_password
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: my_postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongo:
    image: mongo:latest
    container_name: my_mongo
    env_file:
      - .env
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network
    ports:
      - "27017:27017"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  mongo_data:
    driver: local

networks:
  app_network:
    driver: bridge



